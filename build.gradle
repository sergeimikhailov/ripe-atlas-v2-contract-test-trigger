plugins {
    id 'java'
    id 'jp.classmethod.aws.lambda' version '0.35'
}

repositories {
    jcenter()
}

dependencies {
    compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
    compile 'org.glassfish.jersey.core:jersey-client:2.25.1'
    compile 'org.glassfish.jersey.ext:jersey-proxy-client:2.25.1'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.25.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-core:2.7.20'
    testCompile 'com.github.tomakehurst:wiremock:2.5.1'
}

lambda {
    region = System.env.AWS_REGION
}

task zip(dependsOn: jar, type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

task migrateFunction(type: jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask, dependsOn: zip) {
    functionName = 'ripe-atlas-v2-contract-test-trigger'
    runtime = 'java8'
    zipFile = zip.archivePath
    handler = 'nz.mikhailov.atlas.LambdaHandler'
    role = System.env.AWS_LAMBDA_ROLE
    functionDescription = 'Triggers last build that will re-run contract test in Codeship'
    timeout = 15
    memorySize = 128
    environment = [
        CODESHIP_BASE_URL: "https://codeship.com",
        CODESHIP_PROJECT_ID: System.env.CODESHIP_PROJECT_ID,
        CODESHIP_API_KEY: System.env.CODESHIP_API_KEY
    ]
}
